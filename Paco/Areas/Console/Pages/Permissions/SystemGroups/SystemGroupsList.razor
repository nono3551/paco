@page "/systemgroups/list"

@using Paco.Repositories.Database
@using Microsoft.EntityFrameworkCore
@using Paco.Entities.Models
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject NavigationManager NavManager

@attribute [Authorize(Roles = "Administrator")]

<table class="table">
    <thead>
    <tr>
        <th>Name</th>
        <th>Created At</th>
        <th style="text-align:center">Action</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var managedSystemGroup in _managedSystemGroups)
    {
        <tr>
            <td>
                @managedSystemGroup.Name
            </td>
            <td>
                @managedSystemGroup.CreatedAt
            </td>
            <td style="text-align:center">
                <div>
                    <span class="oi bi-sliders clickable" aria-hidden="true" @onclick="() => ManageManagedSystemGroup(managedSystemGroup)"></span>
                    <span class="oi bi-pencil-square mx-3 clickable" aria-hidden="true" @onclick="() => EditManagedSystemGroup(managedSystemGroup)"></span>
                    <span class="oi bi-trash clickable" aria-hidden="true" @onclick="() => DeleteManagedSystemGroup(managedSystemGroup)"></span>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {
    private List<ManagedSystemGroup> _managedSystemGroups = new();

    protected override void OnInitialized()
    {
        Refresh();
        base.OnInitializedAsync();
    }

    private void Refresh()
    {
        using var dbContext = DbContextFactory.CreateDbContext();
        _managedSystemGroups = dbContext.ManagedSystemGroups.ToList();
    }

    private void ManageManagedSystemGroup(ManagedSystemGroup managedSystemGroup)
    {
        NavManager.NavigateTo($"/systemgroups/{managedSystemGroup.Id}/manage");
    }

    private void EditManagedSystemGroup(ManagedSystemGroup managedSystemGroup)
    {
        NavManager.NavigateTo($"/systemgroups/{managedSystemGroup.Id}/edit");
    }

    private void DeleteManagedSystemGroup(ManagedSystemGroup managedSystemGroup)
    {
        DbContextFactory.Remove(managedSystemGroup);
        Refresh();
    }

}