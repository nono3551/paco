@using Paco.Entities.Models
@using Paco.Services
@using Paco.Entities.FreeBsd

@inject SystemManagerService SystemManagerService

@if (_showModal)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Update @_system.Name</h4>
                </div>

                <!-- Modal body -->
                <div class="modal-body">

                    @if (_updates != null)
                    {
                        <ul>
                            @foreach (var update in _updates)
                            {
                                <li>
                                    @(update) <span style="float: right;" class="oi bi-gear clickable px-3" aria-hidden="true" @onclick="() => { }"></span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>Loading...</p>
                    }

                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn" @onclick="@CloseModal">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick=@CloseModal>Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    private bool _showModal = false;
    private ManagedSystem _system;
    private IEnumerable<object> _updates = null;
    private ModalType _modalType = ModalType.Systems;
    
    public void ShowModal(ManagedSystem managedSystem)
    {
        _system = managedSystem;
        _showModal = true;
        StateHasChanged();

        Task.Run(() =>
        {
            _updates = SystemManagerService.GetPackagesActions(_system);
            InvokeAsync(StateHasChanged);
        });
    }

    void CloseModal()
    {
        _showModal = false;
        _system = null;
        _updates = null;
    }

    enum ModalType
    {
        Systems,
        Options
    }
}