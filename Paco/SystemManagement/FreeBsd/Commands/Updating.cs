using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using Paco.Entities.FreeBsd;
using Renci.SshNet;
using Sentry.Extensibility;

namespace Paco.SystemManagement.FreeBsd.Commands
{
    public static class Updating
    {
        public static void PreparePackageActions(SshClient client, IEnumerable<object> actions)
        {
            var optionsVersionKey = "_OPTIONS_READ";
            var listOfOptionsKey = "_FILE_COMPLETE_OPTIONS_LIST";

            var setKey = "OPTIONS_FILE_SET";
            var unsetKey = "OPTIONS_FILE_UNSET";
            
            foreach (PackageAction action in actions)
            {
                var builder = new StringBuilder();

                builder
                    .AppendLine("# This file was generated by Paco")
                    .AppendLine($"# Options for {action.NewVersion}")
                    .AppendLine($"{optionsVersionKey}={action.NewVersion}")
                    .AppendLine($"{listOfOptionsKey}={string.Join(" ", action.Options.Select(x => x.Name))}");
                
                foreach (var option in action.Options)
                {
                    builder.AppendLine($"{(OptionSetStatus.IsSet.HasFlag(option.Status) ? setKey : unsetKey)}+={option.Name}");
                }

                var optionsFile = $"{action.DbRoot}/options";

                var newOptions = builder.ToString().Replace("\r", "");
                
                var result = client.CreateCommand($"echo $'{newOptions}' > {optionsFile} ; echo -n $?").Execute();

                if (result != "0")
                {
                    throw new IOException($"Could not write to file ({result}).\n{optionsFile} ");
                }
            }
        }
    }
}